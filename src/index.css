@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    --background: 220 30% 6%;
    --foreground: 210 40% 98%;

    --card: 220 25% 10%;
    --card-foreground: 210 40% 98%;

    --popover: 220 25% 10%;
    --popover-foreground: 210 40% 98%;

    --primary: 250 80% 65%;
    --primary-foreground: 210 40% 98%;
    --primary-glow: 250 80% 75%;

    --secondary: 200 70% 50%;
    --secondary-foreground: 210 40% 98%;

    --muted: 220 20% 20%;
    --muted-foreground: 215 20% 65%;

    --accent: 280 80% 60%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 220 20% 18%;
    --input: 220 20% 18%;
    --ring: 250 80% 65%;

    --radius: 0.75rem;
    
    /* Gradients */
    --gradient-primary: linear-gradient(135deg, hsl(250 80% 65%) 0%, hsl(280 80% 60%) 100%);
    --gradient-secondary: linear-gradient(135deg, hsl(200 70% 50%) 0%, hsl(250 80% 65%) 100%);
    --gradient-hero: linear-gradient(180deg, hsl(220 30% 6%) 0%, hsl(220 25% 10%) 50%, hsl(220 30% 6%) 100%);
    
    /* Shadows */
    --shadow-glow: 0 0 40px hsl(250 80% 65% / 0.3);
    --shadow-card: 0 10px 30px -10px hsl(250 80% 65% / 0.2);
    
    /* Animations */
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    
    /* New Gradients */
    --gradient-rainbow: linear-gradient(90deg, #ff0080 0%, #ff8c00 25%, #40e0d0 50%, #7b68ee 75%, #ff0080 100%);
    --gradient-conic: conic-gradient(from 180deg, hsl(250 80% 65%) 0%, hsl(280 80% 60%) 25%, hsl(200 70% 50%) 50%, hsl(250 80% 65%) 100%);
    
    /* Enhanced Shadows */
    --shadow-primary-glow: 0 0 50px hsl(250 80% 65% / 0.5);
    --shadow-accent-glow: 0 0 50px hsl(280 80% 60% / 0.5);
    --shadow-secondary-glow: 0 0 50px hsl(200 70% 50% / 0.5);
    --shadow-card-hover: 0 20px 60px -15px hsl(250 80% 65% / 0.4);

    --sidebar-background: 0 0% 98%;

    --sidebar-foreground: 240 5.3% 26.1%;

    --sidebar-primary: 240 5.9% 10%;

    --sidebar-primary-foreground: 0 0% 98%;

    --sidebar-accent: 240 4.8% 95.9%;

    --sidebar-accent-foreground: 240 5.9% 10%;

    --sidebar-border: 220 13% 91%;

    --sidebar-ring: 217.2 91.2% 59.8%;
  }

  .dark {
    --background: 220 30% 6%;
    --foreground: 210 40% 98%;
    --sidebar-background: 240 5.9% 10%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 224.3 76.3% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    cursor: none;
  }
  
  body::before {
    content: '';
    position: fixed;
    inset: 0;
    background-image: 
      linear-gradient(rgba(167, 139, 250, 0.03) 1px, transparent 1px),
      linear-gradient(90deg, rgba(167, 139, 250, 0.03) 1px, transparent 1px);
    background-size: 50px 50px;
    pointer-events: none;
    z-index: -1;
    animation: grid-move 20s linear infinite;
  }
  
  @keyframes grid-move {
    0% { transform: translate(0, 0); }
    100% { transform: translate(50px, 50px); }
  }
}

@layer components {
  /* Glitch Effect */
  .text-glitch {
    position: relative;
    animation: glitch 5s infinite;
  }
  
  @keyframes glitch {
    0%, 96%, 100% {
      transform: translate(0);
      text-shadow: none;
    }
    97% {
      transform: translate(-2px, 2px);
      text-shadow: 2px 0 #ff00ff, -2px 0 #00ffff;
    }
    98% {
      transform: translate(2px, -2px);
      text-shadow: -2px 0 #ff00ff, 2px 0 #00ffff;
    }
    99% {
      transform: translate(-2px, 2px);
      text-shadow: 2px 0 #00ffff, -2px 0 #ff00ff;
    }
  }

  /* Rainbow Border */
  .card-rainbow {
    position: relative;
    background: hsl(var(--card));
  }
  
  .card-rainbow::before {
    content: '';
    position: absolute;
    inset: -2px;
    background: var(--gradient-rainbow);
    background-size: 300% 300%;
    border-radius: inherit;
    z-index: -1;
    animation: rainbow-border 3s linear infinite;
    opacity: 0;
    transition: opacity 0.3s;
  }
  
  .card-rainbow:hover::before {
    opacity: 1;
  }
  
  @keyframes rainbow-border {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }

  /* Glassmorphism */
  .glass-card {
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 
      0 8px 32px rgba(0, 0, 0, 0.37),
      inset 0 1px 0 rgba(255, 255, 255, 0.1);
  }

  /* Magnetic Effect */
  .magnetic {
    transition: transform 0.2s ease-out;
  }
  
  /* Hover Scale */
  .hover-scale {
    transition: transform 0.2s ease-out;
  }
  
  .hover-scale:hover {
    transform: scale(1.05);
  }
  
  /* Hexagon Shape */
  .hexagon {
    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
    transition: all 0.3s ease;
  }
  
  .hexagon:hover {
    transform: scale(1.1) rotate(5deg);
  }
}
